<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:complexType name="baseType">
    <xs:sequence>
      <xs:element name="baseElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="attr" type="xs:string"/>
    <xs:assert test="@attr"/>
  </xs:complexType>

  <xs:complexType name="derivedType">
    <xs:complexContent>
      <xs:restriction base="baseType">
        <xs:sequence>
          <xs:element name="baseElement" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="attr" type="xs:string"/>
        <xs:assert test="(@attr = 'present' and count(./baseElement) eq 0)
                       or (@attr = 'absent')"/>
     </xs:restriction>
   </xs:complexContent>
 </xs:complexType>

 <xs:element name="root" type="derivedType"/>
 
</xs:schema> 



<!-- 
	Test Case Type: valid test (Datatype/facet section 4.3.15) 	
	facet Type 	  : Assertions
	Description   : assertions on derived complex type, both 'derivedType' and of base type must succeed
-->